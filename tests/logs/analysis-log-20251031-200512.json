{
  "generated_at": "2025-10-31T20:05:12.236265",
  "sources": [
    "C:\\MUST\\OneDrive - Macau University of Science and Technology\\SoftwareEngineering\\project\\1031\\tests\\data\\test_comprehensive_examples.c"
  ],
  "reports": [
    {
      "source": "C:\\MUST\\OneDrive - Macau University of Science and Technology\\SoftwareEngineering\\project\\1031\\tests\\data\\test_comprehensive_examples.c",
      "issues": [
        {
          "category": "variable",
          "severity": "warning",
          "message": "变量 `ptr1` 可能在赋值前被使用。",
          "file": "C:\\MUST\\OneDrive - Macau University of Science and Technology\\SoftwareEngineering\\project\\1031\\tests\\data\\test_comprehensive_examples.c",
          "line": 13,
          "column": 6,
          "suggestion": {
            "title": "在引用前检查变量赋值路径",
            "detail": "可以通过初始化或在所有分支赋值来避免。"
          }
        },
        {
          "category": "variable",
          "severity": "warning",
          "message": "变量 `arr_ptr` 可能在赋值前被使用。",
          "file": "C:\\MUST\\OneDrive - Macau University of Science and Technology\\SoftwareEngineering\\project\\1031\\tests\\data\\test_comprehensive_examples.c",
          "line": 26,
          "column": 5,
          "suggestion": {
            "title": "在引用前检查变量赋值路径",
            "detail": "可以通过初始化或在所有分支赋值来避免。"
          }
        },
        {
          "category": "variable",
          "severity": "warning",
          "message": "变量 `str_ptr` 可能在赋值前被使用。",
          "file": "C:\\MUST\\OneDrive - Macau University of Science and Technology\\SoftwareEngineering\\project\\1031\\tests\\data\\test_comprehensive_examples.c",
          "line": 31,
          "column": 5,
          "suggestion": {
            "title": "在引用前检查变量赋值路径",
            "detail": "可以通过初始化或在所有分支赋值来避免。"
          }
        },
        {
          "category": "variable",
          "severity": "warning",
          "message": "变量 `double_ptr` 可能在赋值前被使用。",
          "file": "C:\\MUST\\OneDrive - Macau University of Science and Technology\\SoftwareEngineering\\project\\1031\\tests\\data\\test_comprehensive_examples.c",
          "line": 36,
          "column": 7,
          "suggestion": {
            "title": "在引用前检查变量赋值路径",
            "detail": "可以通过初始化或在所有分支赋值来避免。"
          }
        },
        {
          "category": "variable",
          "severity": "warning",
          "message": "变量 `wild_param` 可能在赋值前被使用。",
          "file": "C:\\MUST\\OneDrive - Macau University of Science and Technology\\SoftwareEngineering\\project\\1031\\tests\\data\\test_comprehensive_examples.c",
          "line": 43,
          "column": 21,
          "suggestion": {
            "title": "在引用前检查变量赋值路径",
            "detail": "可以通过初始化或在所有分支赋值来避免。"
          }
        },
        {
          "category": "variable",
          "severity": "warning",
          "message": "变量 `loop_ptr` 可能在赋值前被使用。",
          "file": "C:\\MUST\\OneDrive - Macau University of Science and Technology\\SoftwareEngineering\\project\\1031\\tests\\data\\test_comprehensive_examples.c",
          "line": 48,
          "column": 9,
          "suggestion": {
            "title": "在引用前检查变量赋值路径",
            "detail": "可以通过初始化或在所有分支赋值来避免。"
          }
        },
        {
          "category": "variable",
          "severity": "warning",
          "message": "变量 `cond_ptr` 可能在赋值前被使用。",
          "file": "C:\\MUST\\OneDrive - Macau University of Science and Technology\\SoftwareEngineering\\project\\1031\\tests\\data\\test_comprehensive_examples.c",
          "line": 54,
          "column": 10,
          "suggestion": {
            "title": "在引用前检查变量赋值路径",
            "detail": "可以通过初始化或在所有分支赋值来避免。"
          }
        },
        {
          "category": "memory",
          "severity": "warning",
          "message": "函数 `test_memory_leak` 中分配次数(3)多于释放次数(0)，可能存在内存泄漏。",
          "file": "C:\\MUST\\OneDrive - Macau University of Science and Technology\\SoftwareEngineering\\project\\1031\\tests\\data\\test_comprehensive_examples.c",
          "line": 79,
          "column": 1,
          "suggestion": {
            "title": "为每一次动态分配配对调用 free",
            "detail": "考虑使用 goto/清理块或智能指针样式封装确保释放。"
          }
        },
        {
          "category": "memory",
          "severity": "warning",
          "message": "函数 `test_partial_leak` 中分配次数(3)多于释放次数(2)，可能存在内存泄漏。",
          "file": "C:\\MUST\\OneDrive - Macau University of Science and Technology\\SoftwareEngineering\\project\\1031\\tests\\data\\test_comprehensive_examples.c",
          "line": 115,
          "column": 1,
          "suggestion": {
            "title": "为每一次动态分配配对调用 free",
            "detail": "考虑使用 goto/清理块或智能指针样式封装确保释放。"
          }
        },
        {
          "category": "memory",
          "severity": "warning",
          "message": "函数 `test_realloc_leak` 中分配次数(2)多于释放次数(0)，可能存在内存泄漏。",
          "file": "C:\\MUST\\OneDrive - Macau University of Science and Technology\\SoftwareEngineering\\project\\1031\\tests\\data\\test_comprehensive_examples.c",
          "line": 137,
          "column": 1,
          "suggestion": {
            "title": "为每一次动态分配配对调用 free",
            "detail": "考虑使用 goto/清理块或智能指针样式封装确保释放。"
          }
        },
        {
          "category": "memory",
          "severity": "warning",
          "message": "函数 `helper_function` 中分配次数(1)多于释放次数(0)，可能存在内存泄漏。",
          "file": "C:\\MUST\\OneDrive - Macau University of Science and Technology\\SoftwareEngineering\\project\\1031\\tests\\data\\test_comprehensive_examples.c",
          "line": 152,
          "column": 1,
          "suggestion": {
            "title": "为每一次动态分配配对调用 free",
            "detail": "考虑使用 goto/清理块或智能指针样式封装确保释放。"
          }
        },
        {
          "category": "memory",
          "severity": "warning",
          "message": "函数 `test_conditional_free` 中分配次数(2)多于释放次数(1)，可能存在内存泄漏。",
          "file": "C:\\MUST\\OneDrive - Macau University of Science and Technology\\SoftwareEngineering\\project\\1031\\tests\\data\\test_comprehensive_examples.c",
          "line": 172,
          "column": 1,
          "suggestion": {
            "title": "为每一次动态分配配对调用 free",
            "detail": "考虑使用 goto/清理块或智能指针样式封装确保释放。"
          }
        },
        {
          "category": "variable",
          "severity": "warning",
          "message": "变量 `ptr1` 可能在赋值前被使用。",
          "file": "C:\\MUST\\OneDrive - Macau University of Science and Technology\\SoftwareEngineering\\project\\1031\\tests\\data\\test_comprehensive_examples.c",
          "line": 278,
          "column": 6,
          "suggestion": {
            "title": "在引用前检查变量赋值路径",
            "detail": "可以通过初始化或在所有分支赋值来避免。"
          }
        },
        {
          "category": "variable",
          "severity": "warning",
          "message": "变量 `str1` 可能在赋值前被使用。",
          "file": "C:\\MUST\\OneDrive - Macau University of Science and Technology\\SoftwareEngineering\\project\\1031\\tests\\data\\test_comprehensive_examples.c",
          "line": 281,
          "column": 5,
          "suggestion": {
            "title": "在引用前检查变量赋值路径",
            "detail": "可以通过初始化或在所有分支赋值来避免。"
          }
        },
        {
          "category": "variable",
          "severity": "warning",
          "message": "变量 `arr1` 可能在赋值前被使用。",
          "file": "C:\\MUST\\OneDrive - Macau University of Science and Technology\\SoftwareEngineering\\project\\1031\\tests\\data\\test_comprehensive_examples.c",
          "line": 284,
          "column": 5,
          "suggestion": {
            "title": "在引用前检查变量赋值路径",
            "detail": "可以通过初始化或在所有分支赋值来避免。"
          }
        },
        {
          "category": "variable",
          "severity": "warning",
          "message": "变量 `ptr3` 可能在赋值前被使用。",
          "file": "C:\\MUST\\OneDrive - Macau University of Science and Technology\\SoftwareEngineering\\project\\1031\\tests\\data\\test_comprehensive_examples.c",
          "line": 302,
          "column": 21,
          "suggestion": {
            "title": "在引用前检查变量赋值路径",
            "detail": "可以通过初始化或在所有分支赋值来避免。"
          }
        },
        {
          "category": "variable",
          "severity": "warning",
          "message": "变量 `str3` 可能在赋值前被使用。",
          "file": "C:\\MUST\\OneDrive - Macau University of Science and Technology\\SoftwareEngineering\\project\\1031\\tests\\data\\test_comprehensive_examples.c",
          "line": 305,
          "column": 17,
          "suggestion": {
            "title": "在引用前检查变量赋值路径",
            "detail": "可以通过初始化或在所有分支赋值来避免。"
          }
        }
      ],
      "summary": {
        "warning": 17
      }
    }
  ],
  "raw_output": "文件: C:\\MUST\\OneDrive - Macau University of Science and Technology\\SoftwareEngineering\\project\\1031\\tests\\data\\test_comprehensive_examples.c\n统计: warning=17\n  [WARNING][variable] C:\\MUST\\OneDrive - Macau University of Science and Technology\\SoftwareEngineering\\project\\1031\\tests\\data\\test_comprehensive_examples.c:13:6: 变量 `ptr1` 可能在赋值前被使用。\n    ↳ 建议: 在引用前检查变量赋值路径\n       可以通过初始化或在所有分支赋值来避免。\n  [WARNING][variable] C:\\MUST\\OneDrive - Macau University of Science and Technology\\SoftwareEngineering\\project\\1031\\tests\\data\\test_comprehensive_examples.c:26:5: 变量 `arr_ptr` 可能在赋值前被使用。\n    ↳ 建议: 在引用前检查变量赋值路径\n       可以通过初始化或在所有分支赋值来避免。\n  [WARNING][variable] C:\\MUST\\OneDrive - Macau University of Science and Technology\\SoftwareEngineering\\project\\1031\\tests\\data\\test_comprehensive_examples.c:31:5: 变量 `str_ptr` 可能在赋值前被使用。\n    ↳ 建议: 在引用前检查变量赋值路径\n       可以通过初始化或在所有分支赋值来避免。\n  [WARNING][variable] C:\\MUST\\OneDrive - Macau University of Science and Technology\\SoftwareEngineering\\project\\1031\\tests\\data\\test_comprehensive_examples.c:36:7: 变量 `double_ptr` 可能在赋值前被使用。\n    ↳ 建议: 在引用前检查变量赋值路径\n       可以通过初始化或在所有分支赋值来避免。\n  [WARNING][variable] C:\\MUST\\OneDrive - Macau University of Science and Technology\\SoftwareEngineering\\project\\1031\\tests\\data\\test_comprehensive_examples.c:43:21: 变量 `wild_param` 可能在赋值前被使用。\n    ↳ 建议: 在引用前检查变量赋值路径\n       可以通过初始化或在所有分支赋值来避免。\n  [WARNING][variable] C:\\MUST\\OneDrive - Macau University of Science and Technology\\SoftwareEngineering\\project\\1031\\tests\\data\\test_comprehensive_examples.c:48:9: 变量 `loop_ptr` 可能在赋值前被使用。\n    ↳ 建议: 在引用前检查变量赋值路径\n       可以通过初始化或在所有分支赋值来避免。\n  [WARNING][variable] C:\\MUST\\OneDrive - Macau University of Science and Technology\\SoftwareEngineering\\project\\1031\\tests\\data\\test_comprehensive_examples.c:54:10: 变量 `cond_ptr` 可能在赋值前被使用。\n    ↳ 建议: 在引用前检查变量赋值路径\n       可以通过初始化或在所有分支赋值来避免。\n  [WARNING][memory] C:\\MUST\\OneDrive - Macau University of Science and Technology\\SoftwareEngineering\\project\\1031\\tests\\data\\test_comprehensive_examples.c:79:1: 函数 `test_memory_leak` 中分配次数(3)多于释放次数(0)，可能存在内存泄漏。\n    ↳ 建议: 为每一次动态分配配对调用 free\n       考虑使用 goto/清理块或智能指针样式封装确保释放。\n  [WARNING][memory] C:\\MUST\\OneDrive - Macau University of Science and Technology\\SoftwareEngineering\\project\\1031\\tests\\data\\test_comprehensive_examples.c:115:1: 函数 `test_partial_leak` 中分配次数(3)多于释放次数(2)，可能存在内存泄漏。\n    ↳ 建议: 为每一次动态分配配对调用 free\n       考虑使用 goto/清理块或智能指针样式封装确保释放。\n  [WARNING][memory] C:\\MUST\\OneDrive - Macau University of Science and Technology\\SoftwareEngineering\\project\\1031\\tests\\data\\test_comprehensive_examples.c:137:1: 函数 `test_realloc_leak` 中分配次数(2)多于释放次数(0)，可能存在内存泄漏。\n    ↳ 建议: 为每一次动态分配配对调用 free\n       考虑使用 goto/清理块或智能指针样式封装确保释放。\n  [WARNING][memory] C:\\MUST\\OneDrive - Macau University of Science and Technology\\SoftwareEngineering\\project\\1031\\tests\\data\\test_comprehensive_examples.c:152:1: 函数 `helper_function` 中分配次数(1)多于释放次数(0)，可能存在内存泄漏。\n    ↳ 建议: 为每一次动态分配配对调用 free\n       考虑使用 goto/清理块或智能指针样式封装确保释放。\n  [WARNING][memory] C:\\MUST\\OneDrive - Macau University of Science and Technology\\SoftwareEngineering\\project\\1031\\tests\\data\\test_comprehensive_examples.c:172:1: 函数 `test_conditional_free` 中分配次数(2)多于释放次数(1)，可能存在内存泄漏。\n    ↳ 建议: 为每一次动态分配配对调用 free\n       考虑使用 goto/清理块或智能指针样式封装确保释放。\n  [WARNING][variable] C:\\MUST\\OneDrive - Macau University of Science and Technology\\SoftwareEngineering\\project\\1031\\tests\\data\\test_comprehensive_examples.c:278:6: 变量 `ptr1` 可能在赋值前被使用。\n    ↳ 建议: 在引用前检查变量赋值路径\n       可以通过初始化或在所有分支赋值来避免。\n  [WARNING][variable] C:\\MUST\\OneDrive - Macau University of Science and Technology\\SoftwareEngineering\\project\\1031\\tests\\data\\test_comprehensive_examples.c:281:5: 变量 `str1` 可能在赋值前被使用。\n    ↳ 建议: 在引用前检查变量赋值路径\n       可以通过初始化或在所有分支赋值来避免。\n  [WARNING][variable] C:\\MUST\\OneDrive - Macau University of Science and Technology\\SoftwareEngineering\\project\\1031\\tests\\data\\test_comprehensive_examples.c:284:5: 变量 `arr1` 可能在赋值前被使用。\n    ↳ 建议: 在引用前检查变量赋值路径\n       可以通过初始化或在所有分支赋值来避免。\n  [WARNING][variable] C:\\MUST\\OneDrive - Macau University of Science and Technology\\SoftwareEngineering\\project\\1031\\tests\\data\\test_comprehensive_examples.c:302:21: 变量 `ptr3` 可能在赋值前被使用。\n    ↳ 建议: 在引用前检查变量赋值路径\n       可以通过初始化或在所有分支赋值来避免。\n  [WARNING][variable] C:\\MUST\\OneDrive - Macau University of Science and Technology\\SoftwareEngineering\\project\\1031\\tests\\data\\test_comprehensive_examples.c:305:17: 变量 `str3` 可能在赋值前被使用。\n    ↳ 建议: 在引用前检查变量赋值路径\n       可以通过初始化或在所有分支赋值来避免。",
  "metrics": {
    "total_issues": 17,
    "true_positive": 0,
    "false_positive": 17,
    "false_negative": 5
  },
  "expected_reference": [
    {
      "category": "memory",
      "line": 12
    },
    {
      "category": "memory",
      "line": 290
    },
    {
      "category": "stdlib",
      "line": 343
    },
    {
      "category": "stdlib",
      "line": 354
    },
    {
      "category": "numeric",
      "line": 364
    }
  ]
}